package com.pys.crm.workbench.mapper;

import com.pys.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 03 13:59:57 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 03 13:59:57 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 03 13:59:57 CST 2022
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 03 13:59:57 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 03 13:59:57 CST 2022
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 保存创建的市场活动
     */
    int insertActivity(Activity activity);

    /**
     * 根据条件分页查询市场活动
     * @return
     */
    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);


    /**
     * 根据条件来查询市场活动的总条数
     * @param map
     * @return
     */
    int selectCountOfActivityByCondition(Map<String,Object> map);

    /**
     * 根据市场活动ids 批量删除
     */
    int deleteActivityByIds(String[] ids);

    /**
     * 通过id查询市场活动
     */
    Activity selectActivityById(String id);

    /**
     * 更新市场活动
     */
    int updateActivity(Activity activity);

    /**
     * 查询所有的市场活动
     */
    List<Activity> selectAllActivities();

    /**
     * 批量保存导入的市场活动
     */
    int insertActivityByList(List<Activity> activityList);

    /**
     * 根据id值，查询市场活动明细
     * @param id
     * @return
     */
    Activity selectActivityForDetailById(String id);

    /**
     * 根据市场活动查询相关联的市场活动的明细信息
     * @param clueId
     * @return
     */
    List<Activity> selectActivityForDetailByClueId(String clueId);

    /**
     * 根据name来模糊查询市场活动，并且把已经跟clueId关联过的市场活动排除
     * @param map
     * @return
     */

    List<Activity> selectActivityForDetailByNameClueId(Map<String,Object> map);

    /**
     * 根据ids查询市场活动的明细信息
     * @param ids
     * @return
     */
    List<Activity> selectActivityForDetailByIds(String[] ids);

    /**
     * 根据name 模糊查询市场活动，并且查询哪些跟cludId关联过的市场活动
     * @return
     */
    List<Activity> selectActivityForConvertByNameClueId(Map<String,Object> map);

}